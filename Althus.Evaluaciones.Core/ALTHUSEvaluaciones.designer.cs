#pragma warning disable 1591
//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Althus.Evaluaciones.Core
{
	using System.Data.Linq;
	using System.Data.Linq.Mapping;
	using System.Data;
	using System.Collections.Generic;
	using System.Reflection;
	using System.Linq;
	using System.Linq.Expressions;
	using System.ComponentModel;
	using System;
	
	
	[global::System.Data.Linq.Mapping.DatabaseAttribute(Name="ALTHUS_Evaluaciones")]
	public partial class ALTHUSEvaluacionesDataContext : System.Data.Linq.DataContext
	{
		
		private static System.Data.Linq.Mapping.MappingSource mappingSource = new AttributeMappingSource();
		
    #region Extensibility Method Definitions
    partial void OnCreated();
    partial void InsertCargo(Cargo instance);
    partial void UpdateCargo(Cargo instance);
    partial void DeleteCargo(Cargo instance);
    partial void InsertUsuario(Usuario instance);
    partial void UpdateUsuario(Usuario instance);
    partial void DeleteUsuario(Usuario instance);
    partial void InsertCompetencia(Competencia instance);
    partial void UpdateCompetencia(Competencia instance);
    partial void DeleteCompetencia(Competencia instance);
    partial void InsertEmpresa(Empresa instance);
    partial void UpdateEmpresa(Empresa instance);
    partial void DeleteEmpresa(Empresa instance);
    partial void InsertEvaluacion(Evaluacion instance);
    partial void UpdateEvaluacion(Evaluacion instance);
    partial void DeleteEvaluacion(Evaluacion instance);
    partial void InsertEvaluacionAbierta(EvaluacionAbierta instance);
    partial void UpdateEvaluacionAbierta(EvaluacionAbierta instance);
    partial void DeleteEvaluacionAbierta(EvaluacionAbierta instance);
    partial void InsertEvaluacionCompetencia(EvaluacionCompetencia instance);
    partial void UpdateEvaluacionCompetencia(EvaluacionCompetencia instance);
    partial void DeleteEvaluacionCompetencia(EvaluacionCompetencia instance);
    partial void InsertPermiso(Permiso instance);
    partial void UpdatePermiso(Permiso instance);
    partial void DeletePermiso(Permiso instance);
    partial void InsertTipoDiagnostico(TipoDiagnostico instance);
    partial void UpdateTipoDiagnostico(TipoDiagnostico instance);
    partial void DeleteTipoDiagnostico(TipoDiagnostico instance);
    partial void InsertTipoEvaluacion(TipoEvaluacion instance);
    partial void UpdateTipoEvaluacion(TipoEvaluacion instance);
    partial void DeleteTipoEvaluacion(TipoEvaluacion instance);
    partial void InsertTipoEvaluacionAbierta(TipoEvaluacionAbierta instance);
    partial void UpdateTipoEvaluacionAbierta(TipoEvaluacionAbierta instance);
    partial void DeleteTipoEvaluacionAbierta(TipoEvaluacionAbierta instance);
    partial void InsertTipoUsuario(TipoUsuario instance);
    partial void UpdateTipoUsuario(TipoUsuario instance);
    partial void DeleteTipoUsuario(TipoUsuario instance);
    partial void InsertTipoUsuarioPermiso(TipoUsuarioPermiso instance);
    partial void UpdateTipoUsuarioPermiso(TipoUsuarioPermiso instance);
    partial void DeleteTipoUsuarioPermiso(TipoUsuarioPermiso instance);
    partial void InsertEvaluado(Evaluado instance);
    partial void UpdateEvaluado(Evaluado instance);
    partial void DeleteEvaluado(Evaluado instance);
    #endregion
		
		public ALTHUSEvaluacionesDataContext() : 
				base(global::Althus.Evaluaciones.Core.Properties.Settings.Default.ALTHUS_EvaluacionesConnectionString, mappingSource)
		{
			OnCreated();
		}
		
		public ALTHUSEvaluacionesDataContext(string connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public ALTHUSEvaluacionesDataContext(System.Data.IDbConnection connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public ALTHUSEvaluacionesDataContext(string connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public ALTHUSEvaluacionesDataContext(System.Data.IDbConnection connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public System.Data.Linq.Table<Cargo> Cargos
		{
			get
			{
				return this.GetTable<Cargo>();
			}
		}
		
		public System.Data.Linq.Table<Usuario> Usuarios
		{
			get
			{
				return this.GetTable<Usuario>();
			}
		}
		
		public System.Data.Linq.Table<Competencia> Competencias
		{
			get
			{
				return this.GetTable<Competencia>();
			}
		}
		
		public System.Data.Linq.Table<Empresa> Empresas
		{
			get
			{
				return this.GetTable<Empresa>();
			}
		}
		
		public System.Data.Linq.Table<Evaluacion> Evaluacions
		{
			get
			{
				return this.GetTable<Evaluacion>();
			}
		}
		
		public System.Data.Linq.Table<EvaluacionAbierta> EvaluacionAbiertas
		{
			get
			{
				return this.GetTable<EvaluacionAbierta>();
			}
		}
		
		public System.Data.Linq.Table<EvaluacionCompetencia> EvaluacionCompetencias
		{
			get
			{
				return this.GetTable<EvaluacionCompetencia>();
			}
		}
		
		public System.Data.Linq.Table<Permiso> Permisos
		{
			get
			{
				return this.GetTable<Permiso>();
			}
		}
		
		public System.Data.Linq.Table<TipoDiagnostico> TipoDiagnosticos
		{
			get
			{
				return this.GetTable<TipoDiagnostico>();
			}
		}
		
		public System.Data.Linq.Table<TipoEvaluacion> TipoEvaluacions
		{
			get
			{
				return this.GetTable<TipoEvaluacion>();
			}
		}
		
		public System.Data.Linq.Table<TipoEvaluacionAbierta> TipoEvaluacionAbiertas
		{
			get
			{
				return this.GetTable<TipoEvaluacionAbierta>();
			}
		}
		
		public System.Data.Linq.Table<TipoUsuario> TipoUsuarios
		{
			get
			{
				return this.GetTable<TipoUsuario>();
			}
		}
		
		public System.Data.Linq.Table<TipoUsuarioPermiso> TipoUsuarioPermisos
		{
			get
			{
				return this.GetTable<TipoUsuarioPermiso>();
			}
		}
		
		public System.Data.Linq.Table<Evaluado> Evaluados
		{
			get
			{
				return this.GetTable<Evaluado>();
			}
		}
		
		public System.Data.Linq.Table<vw_RelacionEmpresaCargo> vw_RelacionEmpresaCargos
		{
			get
			{
				return this.GetTable<vw_RelacionEmpresaCargo>();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Cargo")]
	public partial class Cargo : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _IdCargo;
		
		private int _IdEmpresa;
		
		private string _Cargo1;
		
		private EntitySet<Competencia> _Competencias;
		
		private EntitySet<Evaluacion> _Evaluacions;
		
		private EntityRef<Empresa> _Empresa;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdCargoChanging(int value);
    partial void OnIdCargoChanged();
    partial void OnIdEmpresaChanging(int value);
    partial void OnIdEmpresaChanged();
    partial void OnCargo1Changing(string value);
    partial void OnCargo1Changed();
    #endregion
		
		public Cargo()
		{
			this._Competencias = new EntitySet<Competencia>(new Action<Competencia>(this.attach_Competencias), new Action<Competencia>(this.detach_Competencias));
			this._Evaluacions = new EntitySet<Evaluacion>(new Action<Evaluacion>(this.attach_Evaluacions), new Action<Evaluacion>(this.detach_Evaluacions));
			this._Empresa = default(EntityRef<Empresa>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IdCargo", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int IdCargo
		{
			get
			{
				return this._IdCargo;
			}
			set
			{
				if ((this._IdCargo != value))
				{
					this.OnIdCargoChanging(value);
					this.SendPropertyChanging();
					this._IdCargo = value;
					this.SendPropertyChanged("IdCargo");
					this.OnIdCargoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IdEmpresa", DbType="Int NOT NULL")]
		public int IdEmpresa
		{
			get
			{
				return this._IdEmpresa;
			}
			set
			{
				if ((this._IdEmpresa != value))
				{
					if (this._Empresa.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnIdEmpresaChanging(value);
					this.SendPropertyChanging();
					this._IdEmpresa = value;
					this.SendPropertyChanged("IdEmpresa");
					this.OnIdEmpresaChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="Cargo", Storage="_Cargo1", DbType="NVarChar(255) NOT NULL", CanBeNull=false)]
		public string Cargo1
		{
			get
			{
				return this._Cargo1;
			}
			set
			{
				if ((this._Cargo1 != value))
				{
					this.OnCargo1Changing(value);
					this.SendPropertyChanging();
					this._Cargo1 = value;
					this.SendPropertyChanged("Cargo1");
					this.OnCargo1Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Cargo_Competencia", Storage="_Competencias", ThisKey="IdCargo", OtherKey="IdCargo")]
		public EntitySet<Competencia> Competencias
		{
			get
			{
				return this._Competencias;
			}
			set
			{
				this._Competencias.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Cargo_Evaluacion", Storage="_Evaluacions", ThisKey="IdCargo", OtherKey="IdCargo")]
		public EntitySet<Evaluacion> Evaluacions
		{
			get
			{
				return this._Evaluacions;
			}
			set
			{
				this._Evaluacions.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Empresa_Cargo", Storage="_Empresa", ThisKey="IdEmpresa", OtherKey="IdEmpresa", IsForeignKey=true)]
		public Empresa Empresa
		{
			get
			{
				return this._Empresa.Entity;
			}
			set
			{
				Empresa previousValue = this._Empresa.Entity;
				if (((previousValue != value) 
							|| (this._Empresa.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Empresa.Entity = null;
						previousValue.Cargos.Remove(this);
					}
					this._Empresa.Entity = value;
					if ((value != null))
					{
						value.Cargos.Add(this);
						this._IdEmpresa = value.IdEmpresa;
					}
					else
					{
						this._IdEmpresa = default(int);
					}
					this.SendPropertyChanged("Empresa");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Competencias(Competencia entity)
		{
			this.SendPropertyChanging();
			entity.Cargo = this;
		}
		
		private void detach_Competencias(Competencia entity)
		{
			this.SendPropertyChanging();
			entity.Cargo = null;
		}
		
		private void attach_Evaluacions(Evaluacion entity)
		{
			this.SendPropertyChanging();
			entity.Cargo = this;
		}
		
		private void detach_Evaluacions(Evaluacion entity)
		{
			this.SendPropertyChanging();
			entity.Cargo = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Usuario")]
	public partial class Usuario : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _IdUsuario;
		
		private int _IdTipoUsuario;
		
		private int _Rut;
		
		private string _NombreUsuario;
		
		private string _Nombre;
		
		private string _ApellidoPaterno;
		
		private string _ApellidoMaterno;
		
		private string _Correo;
		
		private EntitySet<Evaluacion> _Evaluacions;
		
		private EntityRef<TipoUsuario> _TipoUsuario;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdUsuarioChanging(int value);
    partial void OnIdUsuarioChanged();
    partial void OnIdTipoUsuarioChanging(int value);
    partial void OnIdTipoUsuarioChanged();
    partial void OnRutChanging(int value);
    partial void OnRutChanged();
    partial void OnNombreUsuarioChanging(string value);
    partial void OnNombreUsuarioChanged();
    partial void OnNombreChanging(string value);
    partial void OnNombreChanged();
    partial void OnApellidoPaternoChanging(string value);
    partial void OnApellidoPaternoChanged();
    partial void OnApellidoMaternoChanging(string value);
    partial void OnApellidoMaternoChanged();
    partial void OnCorreoChanging(string value);
    partial void OnCorreoChanged();
    #endregion
		
		public Usuario()
		{
			this._Evaluacions = new EntitySet<Evaluacion>(new Action<Evaluacion>(this.attach_Evaluacions), new Action<Evaluacion>(this.detach_Evaluacions));
			this._TipoUsuario = default(EntityRef<TipoUsuario>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IdUsuario", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int IdUsuario
		{
			get
			{
				return this._IdUsuario;
			}
			set
			{
				if ((this._IdUsuario != value))
				{
					this.OnIdUsuarioChanging(value);
					this.SendPropertyChanging();
					this._IdUsuario = value;
					this.SendPropertyChanged("IdUsuario");
					this.OnIdUsuarioChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IdTipoUsuario", DbType="Int NOT NULL")]
		public int IdTipoUsuario
		{
			get
			{
				return this._IdTipoUsuario;
			}
			set
			{
				if ((this._IdTipoUsuario != value))
				{
					if (this._TipoUsuario.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnIdTipoUsuarioChanging(value);
					this.SendPropertyChanging();
					this._IdTipoUsuario = value;
					this.SendPropertyChanged("IdTipoUsuario");
					this.OnIdTipoUsuarioChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Rut", DbType="Int NOT NULL")]
		public int Rut
		{
			get
			{
				return this._Rut;
			}
			set
			{
				if ((this._Rut != value))
				{
					this.OnRutChanging(value);
					this.SendPropertyChanging();
					this._Rut = value;
					this.SendPropertyChanged("Rut");
					this.OnRutChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NombreUsuario", DbType="NChar(10) NOT NULL", CanBeNull=false)]
		public string NombreUsuario
		{
			get
			{
				return this._NombreUsuario;
			}
			set
			{
				if ((this._NombreUsuario != value))
				{
					this.OnNombreUsuarioChanging(value);
					this.SendPropertyChanging();
					this._NombreUsuario = value;
					this.SendPropertyChanged("NombreUsuario");
					this.OnNombreUsuarioChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Nombre", DbType="NVarChar(255) NOT NULL", CanBeNull=false)]
		public string Nombre
		{
			get
			{
				return this._Nombre;
			}
			set
			{
				if ((this._Nombre != value))
				{
					this.OnNombreChanging(value);
					this.SendPropertyChanging();
					this._Nombre = value;
					this.SendPropertyChanged("Nombre");
					this.OnNombreChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ApellidoPaterno", DbType="NVarChar(255) NOT NULL", CanBeNull=false)]
		public string ApellidoPaterno
		{
			get
			{
				return this._ApellidoPaterno;
			}
			set
			{
				if ((this._ApellidoPaterno != value))
				{
					this.OnApellidoPaternoChanging(value);
					this.SendPropertyChanging();
					this._ApellidoPaterno = value;
					this.SendPropertyChanged("ApellidoPaterno");
					this.OnApellidoPaternoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ApellidoMaterno", DbType="NChar(10)")]
		public string ApellidoMaterno
		{
			get
			{
				return this._ApellidoMaterno;
			}
			set
			{
				if ((this._ApellidoMaterno != value))
				{
					this.OnApellidoMaternoChanging(value);
					this.SendPropertyChanging();
					this._ApellidoMaterno = value;
					this.SendPropertyChanged("ApellidoMaterno");
					this.OnApellidoMaternoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Correo", DbType="NChar(10) NOT NULL", CanBeNull=false)]
		public string Correo
		{
			get
			{
				return this._Correo;
			}
			set
			{
				if ((this._Correo != value))
				{
					this.OnCorreoChanging(value);
					this.SendPropertyChanging();
					this._Correo = value;
					this.SendPropertyChanged("Correo");
					this.OnCorreoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Usuario_Evaluacion", Storage="_Evaluacions", ThisKey="IdUsuario", OtherKey="IdUsuarioEvaluador")]
		public EntitySet<Evaluacion> Evaluacions
		{
			get
			{
				return this._Evaluacions;
			}
			set
			{
				this._Evaluacions.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="TipoUsuario_Usuario", Storage="_TipoUsuario", ThisKey="IdTipoUsuario", OtherKey="IdTipoUsuario", IsForeignKey=true)]
		public TipoUsuario TipoUsuario
		{
			get
			{
				return this._TipoUsuario.Entity;
			}
			set
			{
				TipoUsuario previousValue = this._TipoUsuario.Entity;
				if (((previousValue != value) 
							|| (this._TipoUsuario.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._TipoUsuario.Entity = null;
						previousValue.Usuarios.Remove(this);
					}
					this._TipoUsuario.Entity = value;
					if ((value != null))
					{
						value.Usuarios.Add(this);
						this._IdTipoUsuario = value.IdTipoUsuario;
					}
					else
					{
						this._IdTipoUsuario = default(int);
					}
					this.SendPropertyChanged("TipoUsuario");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Evaluacions(Evaluacion entity)
		{
			this.SendPropertyChanging();
			entity.Usuario = this;
		}
		
		private void detach_Evaluacions(Evaluacion entity)
		{
			this.SendPropertyChanging();
			entity.Usuario = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Competencia")]
	public partial class Competencia : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _IdCompetencia;
		
		private int _IdCargo;
		
		private string _Competencia1;
		
		private int _ValorEsperado;
		
		private EntitySet<EvaluacionCompetencia> _EvaluacionCompetencias;
		
		private EntityRef<Cargo> _Cargo;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdCompetenciaChanging(int value);
    partial void OnIdCompetenciaChanged();
    partial void OnIdCargoChanging(int value);
    partial void OnIdCargoChanged();
    partial void OnCompetencia1Changing(string value);
    partial void OnCompetencia1Changed();
    partial void OnValorEsperadoChanging(int value);
    partial void OnValorEsperadoChanged();
    #endregion
		
		public Competencia()
		{
			this._EvaluacionCompetencias = new EntitySet<EvaluacionCompetencia>(new Action<EvaluacionCompetencia>(this.attach_EvaluacionCompetencias), new Action<EvaluacionCompetencia>(this.detach_EvaluacionCompetencias));
			this._Cargo = default(EntityRef<Cargo>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IdCompetencia", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int IdCompetencia
		{
			get
			{
				return this._IdCompetencia;
			}
			set
			{
				if ((this._IdCompetencia != value))
				{
					this.OnIdCompetenciaChanging(value);
					this.SendPropertyChanging();
					this._IdCompetencia = value;
					this.SendPropertyChanged("IdCompetencia");
					this.OnIdCompetenciaChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IdCargo", DbType="Int NOT NULL")]
		public int IdCargo
		{
			get
			{
				return this._IdCargo;
			}
			set
			{
				if ((this._IdCargo != value))
				{
					if (this._Cargo.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnIdCargoChanging(value);
					this.SendPropertyChanging();
					this._IdCargo = value;
					this.SendPropertyChanged("IdCargo");
					this.OnIdCargoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="Competencia", Storage="_Competencia1", DbType="NVarChar(255) NOT NULL", CanBeNull=false)]
		public string Competencia1
		{
			get
			{
				return this._Competencia1;
			}
			set
			{
				if ((this._Competencia1 != value))
				{
					this.OnCompetencia1Changing(value);
					this.SendPropertyChanging();
					this._Competencia1 = value;
					this.SendPropertyChanged("Competencia1");
					this.OnCompetencia1Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ValorEsperado", DbType="Int NOT NULL")]
		public int ValorEsperado
		{
			get
			{
				return this._ValorEsperado;
			}
			set
			{
				if ((this._ValorEsperado != value))
				{
					this.OnValorEsperadoChanging(value);
					this.SendPropertyChanging();
					this._ValorEsperado = value;
					this.SendPropertyChanged("ValorEsperado");
					this.OnValorEsperadoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Competencia_EvaluacionCompetencia", Storage="_EvaluacionCompetencias", ThisKey="IdCompetencia", OtherKey="IdCompetencia")]
		public EntitySet<EvaluacionCompetencia> EvaluacionCompetencias
		{
			get
			{
				return this._EvaluacionCompetencias;
			}
			set
			{
				this._EvaluacionCompetencias.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Cargo_Competencia", Storage="_Cargo", ThisKey="IdCargo", OtherKey="IdCargo", IsForeignKey=true)]
		public Cargo Cargo
		{
			get
			{
				return this._Cargo.Entity;
			}
			set
			{
				Cargo previousValue = this._Cargo.Entity;
				if (((previousValue != value) 
							|| (this._Cargo.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Cargo.Entity = null;
						previousValue.Competencias.Remove(this);
					}
					this._Cargo.Entity = value;
					if ((value != null))
					{
						value.Competencias.Add(this);
						this._IdCargo = value.IdCargo;
					}
					else
					{
						this._IdCargo = default(int);
					}
					this.SendPropertyChanged("Cargo");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_EvaluacionCompetencias(EvaluacionCompetencia entity)
		{
			this.SendPropertyChanging();
			entity.Competencia = this;
		}
		
		private void detach_EvaluacionCompetencias(EvaluacionCompetencia entity)
		{
			this.SendPropertyChanging();
			entity.Competencia = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Empresa")]
	public partial class Empresa : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _IdEmpresa;
		
		private string _Empresa1;
		
		private System.Data.Linq.Binary _Logo;
		
		private EntitySet<Cargo> _Cargos;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdEmpresaChanging(int value);
    partial void OnIdEmpresaChanged();
    partial void OnEmpresa1Changing(string value);
    partial void OnEmpresa1Changed();
    partial void OnLogoChanging(System.Data.Linq.Binary value);
    partial void OnLogoChanged();
    #endregion
		
		public Empresa()
		{
			this._Cargos = new EntitySet<Cargo>(new Action<Cargo>(this.attach_Cargos), new Action<Cargo>(this.detach_Cargos));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IdEmpresa", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int IdEmpresa
		{
			get
			{
				return this._IdEmpresa;
			}
			set
			{
				if ((this._IdEmpresa != value))
				{
					this.OnIdEmpresaChanging(value);
					this.SendPropertyChanging();
					this._IdEmpresa = value;
					this.SendPropertyChanged("IdEmpresa");
					this.OnIdEmpresaChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="Empresa", Storage="_Empresa1", DbType="NVarChar(255) NOT NULL", CanBeNull=false)]
		public string Empresa1
		{
			get
			{
				return this._Empresa1;
			}
			set
			{
				if ((this._Empresa1 != value))
				{
					this.OnEmpresa1Changing(value);
					this.SendPropertyChanging();
					this._Empresa1 = value;
					this.SendPropertyChanged("Empresa1");
					this.OnEmpresa1Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Logo", DbType="VarBinary(255)", UpdateCheck=UpdateCheck.Never)]
		public System.Data.Linq.Binary Logo
		{
			get
			{
				return this._Logo;
			}
			set
			{
				if ((this._Logo != value))
				{
					this.OnLogoChanging(value);
					this.SendPropertyChanging();
					this._Logo = value;
					this.SendPropertyChanged("Logo");
					this.OnLogoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Empresa_Cargo", Storage="_Cargos", ThisKey="IdEmpresa", OtherKey="IdEmpresa")]
		public EntitySet<Cargo> Cargos
		{
			get
			{
				return this._Cargos;
			}
			set
			{
				this._Cargos.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Cargos(Cargo entity)
		{
			this.SendPropertyChanging();
			entity.Empresa = this;
		}
		
		private void detach_Cargos(Cargo entity)
		{
			this.SendPropertyChanging();
			entity.Empresa = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Evaluacion")]
	public partial class Evaluacion : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _IdEvaluacion;
		
		private int _IdTipoEvaluacion;
		
		private int _IdCargo;
		
		private int _IdEvaluado;
		
		private System.Nullable<int> _IdTipoDiagnostico;
		
		private System.Nullable<int> _IdUsuarioEvaluador;
		
		private System.Nullable<double> _PorcetajeIdioneidad;
		
		private System.DateTime _FechaEvaluacion;
		
		private EntitySet<EvaluacionAbierta> _EvaluacionAbiertas;
		
		private EntitySet<EvaluacionCompetencia> _EvaluacionCompetencias;
		
		private EntityRef<Cargo> _Cargo;
		
		private EntityRef<Usuario> _Usuario;
		
		private EntityRef<TipoDiagnostico> _TipoDiagnostico;
		
		private EntityRef<TipoEvaluacion> _TipoEvaluacion;
		
		private EntityRef<Evaluado> _Evaluado;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdEvaluacionChanging(int value);
    partial void OnIdEvaluacionChanged();
    partial void OnIdTipoEvaluacionChanging(int value);
    partial void OnIdTipoEvaluacionChanged();
    partial void OnIdCargoChanging(int value);
    partial void OnIdCargoChanged();
    partial void OnIdEvaluadoChanging(int value);
    partial void OnIdEvaluadoChanged();
    partial void OnIdTipoDiagnosticoChanging(System.Nullable<int> value);
    partial void OnIdTipoDiagnosticoChanged();
    partial void OnIdUsuarioEvaluadorChanging(System.Nullable<int> value);
    partial void OnIdUsuarioEvaluadorChanged();
    partial void OnPorcetajeIdioneidadChanging(System.Nullable<double> value);
    partial void OnPorcetajeIdioneidadChanged();
    partial void OnFechaEvaluacionChanging(System.DateTime value);
    partial void OnFechaEvaluacionChanged();
    #endregion
		
		public Evaluacion()
		{
			this._EvaluacionAbiertas = new EntitySet<EvaluacionAbierta>(new Action<EvaluacionAbierta>(this.attach_EvaluacionAbiertas), new Action<EvaluacionAbierta>(this.detach_EvaluacionAbiertas));
			this._EvaluacionCompetencias = new EntitySet<EvaluacionCompetencia>(new Action<EvaluacionCompetencia>(this.attach_EvaluacionCompetencias), new Action<EvaluacionCompetencia>(this.detach_EvaluacionCompetencias));
			this._Cargo = default(EntityRef<Cargo>);
			this._Usuario = default(EntityRef<Usuario>);
			this._TipoDiagnostico = default(EntityRef<TipoDiagnostico>);
			this._TipoEvaluacion = default(EntityRef<TipoEvaluacion>);
			this._Evaluado = default(EntityRef<Evaluado>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IdEvaluacion", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int IdEvaluacion
		{
			get
			{
				return this._IdEvaluacion;
			}
			set
			{
				if ((this._IdEvaluacion != value))
				{
					this.OnIdEvaluacionChanging(value);
					this.SendPropertyChanging();
					this._IdEvaluacion = value;
					this.SendPropertyChanged("IdEvaluacion");
					this.OnIdEvaluacionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IdTipoEvaluacion", DbType="Int NOT NULL")]
		public int IdTipoEvaluacion
		{
			get
			{
				return this._IdTipoEvaluacion;
			}
			set
			{
				if ((this._IdTipoEvaluacion != value))
				{
					if (this._TipoEvaluacion.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnIdTipoEvaluacionChanging(value);
					this.SendPropertyChanging();
					this._IdTipoEvaluacion = value;
					this.SendPropertyChanged("IdTipoEvaluacion");
					this.OnIdTipoEvaluacionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IdCargo", DbType="Int NOT NULL")]
		public int IdCargo
		{
			get
			{
				return this._IdCargo;
			}
			set
			{
				if ((this._IdCargo != value))
				{
					if (this._Cargo.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnIdCargoChanging(value);
					this.SendPropertyChanging();
					this._IdCargo = value;
					this.SendPropertyChanged("IdCargo");
					this.OnIdCargoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IdEvaluado", DbType="Int NOT NULL")]
		public int IdEvaluado
		{
			get
			{
				return this._IdEvaluado;
			}
			set
			{
				if ((this._IdEvaluado != value))
				{
					if (this._Evaluado.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnIdEvaluadoChanging(value);
					this.SendPropertyChanging();
					this._IdEvaluado = value;
					this.SendPropertyChanged("IdEvaluado");
					this.OnIdEvaluadoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IdTipoDiagnostico", DbType="Int")]
		public System.Nullable<int> IdTipoDiagnostico
		{
			get
			{
				return this._IdTipoDiagnostico;
			}
			set
			{
				if ((this._IdTipoDiagnostico != value))
				{
					if (this._TipoDiagnostico.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnIdTipoDiagnosticoChanging(value);
					this.SendPropertyChanging();
					this._IdTipoDiagnostico = value;
					this.SendPropertyChanged("IdTipoDiagnostico");
					this.OnIdTipoDiagnosticoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IdUsuarioEvaluador", DbType="Int")]
		public System.Nullable<int> IdUsuarioEvaluador
		{
			get
			{
				return this._IdUsuarioEvaluador;
			}
			set
			{
				if ((this._IdUsuarioEvaluador != value))
				{
					if (this._Usuario.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnIdUsuarioEvaluadorChanging(value);
					this.SendPropertyChanging();
					this._IdUsuarioEvaluador = value;
					this.SendPropertyChanged("IdUsuarioEvaluador");
					this.OnIdUsuarioEvaluadorChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PorcetajeIdioneidad", DbType="Float")]
		public System.Nullable<double> PorcetajeIdioneidad
		{
			get
			{
				return this._PorcetajeIdioneidad;
			}
			set
			{
				if ((this._PorcetajeIdioneidad != value))
				{
					this.OnPorcetajeIdioneidadChanging(value);
					this.SendPropertyChanging();
					this._PorcetajeIdioneidad = value;
					this.SendPropertyChanged("PorcetajeIdioneidad");
					this.OnPorcetajeIdioneidadChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FechaEvaluacion", DbType="Date NOT NULL")]
		public System.DateTime FechaEvaluacion
		{
			get
			{
				return this._FechaEvaluacion;
			}
			set
			{
				if ((this._FechaEvaluacion != value))
				{
					this.OnFechaEvaluacionChanging(value);
					this.SendPropertyChanging();
					this._FechaEvaluacion = value;
					this.SendPropertyChanged("FechaEvaluacion");
					this.OnFechaEvaluacionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Evaluacion_EvaluacionAbierta", Storage="_EvaluacionAbiertas", ThisKey="IdEvaluacion", OtherKey="IdEvaluacion")]
		public EntitySet<EvaluacionAbierta> EvaluacionAbiertas
		{
			get
			{
				return this._EvaluacionAbiertas;
			}
			set
			{
				this._EvaluacionAbiertas.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Evaluacion_EvaluacionCompetencia", Storage="_EvaluacionCompetencias", ThisKey="IdEvaluacion", OtherKey="IdEvaluacion")]
		public EntitySet<EvaluacionCompetencia> EvaluacionCompetencias
		{
			get
			{
				return this._EvaluacionCompetencias;
			}
			set
			{
				this._EvaluacionCompetencias.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Cargo_Evaluacion", Storage="_Cargo", ThisKey="IdCargo", OtherKey="IdCargo", IsForeignKey=true)]
		public Cargo Cargo
		{
			get
			{
				return this._Cargo.Entity;
			}
			set
			{
				Cargo previousValue = this._Cargo.Entity;
				if (((previousValue != value) 
							|| (this._Cargo.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Cargo.Entity = null;
						previousValue.Evaluacions.Remove(this);
					}
					this._Cargo.Entity = value;
					if ((value != null))
					{
						value.Evaluacions.Add(this);
						this._IdCargo = value.IdCargo;
					}
					else
					{
						this._IdCargo = default(int);
					}
					this.SendPropertyChanged("Cargo");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Usuario_Evaluacion", Storage="_Usuario", ThisKey="IdUsuarioEvaluador", OtherKey="IdUsuario", IsForeignKey=true)]
		public Usuario Usuario
		{
			get
			{
				return this._Usuario.Entity;
			}
			set
			{
				Usuario previousValue = this._Usuario.Entity;
				if (((previousValue != value) 
							|| (this._Usuario.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Usuario.Entity = null;
						previousValue.Evaluacions.Remove(this);
					}
					this._Usuario.Entity = value;
					if ((value != null))
					{
						value.Evaluacions.Add(this);
						this._IdUsuarioEvaluador = value.IdUsuario;
					}
					else
					{
						this._IdUsuarioEvaluador = default(Nullable<int>);
					}
					this.SendPropertyChanged("Usuario");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="TipoDiagnostico_Evaluacion", Storage="_TipoDiagnostico", ThisKey="IdTipoDiagnostico", OtherKey="IdTipoDiagnostico", IsForeignKey=true)]
		public TipoDiagnostico TipoDiagnostico
		{
			get
			{
				return this._TipoDiagnostico.Entity;
			}
			set
			{
				TipoDiagnostico previousValue = this._TipoDiagnostico.Entity;
				if (((previousValue != value) 
							|| (this._TipoDiagnostico.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._TipoDiagnostico.Entity = null;
						previousValue.Evaluacions.Remove(this);
					}
					this._TipoDiagnostico.Entity = value;
					if ((value != null))
					{
						value.Evaluacions.Add(this);
						this._IdTipoDiagnostico = value.IdTipoDiagnostico;
					}
					else
					{
						this._IdTipoDiagnostico = default(Nullable<int>);
					}
					this.SendPropertyChanged("TipoDiagnostico");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="TipoEvaluacion_Evaluacion", Storage="_TipoEvaluacion", ThisKey="IdTipoEvaluacion", OtherKey="IdTipoEvaluacion", IsForeignKey=true)]
		public TipoEvaluacion TipoEvaluacion
		{
			get
			{
				return this._TipoEvaluacion.Entity;
			}
			set
			{
				TipoEvaluacion previousValue = this._TipoEvaluacion.Entity;
				if (((previousValue != value) 
							|| (this._TipoEvaluacion.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._TipoEvaluacion.Entity = null;
						previousValue.Evaluacions.Remove(this);
					}
					this._TipoEvaluacion.Entity = value;
					if ((value != null))
					{
						value.Evaluacions.Add(this);
						this._IdTipoEvaluacion = value.IdTipoEvaluacion;
					}
					else
					{
						this._IdTipoEvaluacion = default(int);
					}
					this.SendPropertyChanged("TipoEvaluacion");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Evaluado_Evaluacion", Storage="_Evaluado", ThisKey="IdEvaluado", OtherKey="IdEvaluado", IsForeignKey=true)]
		public Evaluado Evaluado
		{
			get
			{
				return this._Evaluado.Entity;
			}
			set
			{
				Evaluado previousValue = this._Evaluado.Entity;
				if (((previousValue != value) 
							|| (this._Evaluado.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Evaluado.Entity = null;
						previousValue.Evaluacions.Remove(this);
					}
					this._Evaluado.Entity = value;
					if ((value != null))
					{
						value.Evaluacions.Add(this);
						this._IdEvaluado = value.IdEvaluado;
					}
					else
					{
						this._IdEvaluado = default(int);
					}
					this.SendPropertyChanged("Evaluado");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_EvaluacionAbiertas(EvaluacionAbierta entity)
		{
			this.SendPropertyChanging();
			entity.Evaluacion = this;
		}
		
		private void detach_EvaluacionAbiertas(EvaluacionAbierta entity)
		{
			this.SendPropertyChanging();
			entity.Evaluacion = null;
		}
		
		private void attach_EvaluacionCompetencias(EvaluacionCompetencia entity)
		{
			this.SendPropertyChanging();
			entity.Evaluacion = this;
		}
		
		private void detach_EvaluacionCompetencias(EvaluacionCompetencia entity)
		{
			this.SendPropertyChanging();
			entity.Evaluacion = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.EvaluacionAbierta")]
	public partial class EvaluacionAbierta : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _IdEvaluacionAbierta;
		
		private int _IdTipoEvaluacionAbierta;
		
		private int _IdEvaluacion;
		
		private string _EvaluacionAbierta1;
		
		private EntityRef<Evaluacion> _Evaluacion;
		
		private EntityRef<TipoEvaluacionAbierta> _TipoEvaluacionAbierta;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdEvaluacionAbiertaChanging(int value);
    partial void OnIdEvaluacionAbiertaChanged();
    partial void OnIdTipoEvaluacionAbiertaChanging(int value);
    partial void OnIdTipoEvaluacionAbiertaChanged();
    partial void OnIdEvaluacionChanging(int value);
    partial void OnIdEvaluacionChanged();
    partial void OnEvaluacionAbierta1Changing(string value);
    partial void OnEvaluacionAbierta1Changed();
    #endregion
		
		public EvaluacionAbierta()
		{
			this._Evaluacion = default(EntityRef<Evaluacion>);
			this._TipoEvaluacionAbierta = default(EntityRef<TipoEvaluacionAbierta>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IdEvaluacionAbierta", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int IdEvaluacionAbierta
		{
			get
			{
				return this._IdEvaluacionAbierta;
			}
			set
			{
				if ((this._IdEvaluacionAbierta != value))
				{
					this.OnIdEvaluacionAbiertaChanging(value);
					this.SendPropertyChanging();
					this._IdEvaluacionAbierta = value;
					this.SendPropertyChanged("IdEvaluacionAbierta");
					this.OnIdEvaluacionAbiertaChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IdTipoEvaluacionAbierta", DbType="Int NOT NULL")]
		public int IdTipoEvaluacionAbierta
		{
			get
			{
				return this._IdTipoEvaluacionAbierta;
			}
			set
			{
				if ((this._IdTipoEvaluacionAbierta != value))
				{
					if (this._TipoEvaluacionAbierta.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnIdTipoEvaluacionAbiertaChanging(value);
					this.SendPropertyChanging();
					this._IdTipoEvaluacionAbierta = value;
					this.SendPropertyChanged("IdTipoEvaluacionAbierta");
					this.OnIdTipoEvaluacionAbiertaChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IdEvaluacion", DbType="Int NOT NULL")]
		public int IdEvaluacion
		{
			get
			{
				return this._IdEvaluacion;
			}
			set
			{
				if ((this._IdEvaluacion != value))
				{
					if (this._Evaluacion.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnIdEvaluacionChanging(value);
					this.SendPropertyChanging();
					this._IdEvaluacion = value;
					this.SendPropertyChanged("IdEvaluacion");
					this.OnIdEvaluacionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="EvaluacionAbierta", Storage="_EvaluacionAbierta1", DbType="NVarChar(MAX) NOT NULL", CanBeNull=false)]
		public string EvaluacionAbierta1
		{
			get
			{
				return this._EvaluacionAbierta1;
			}
			set
			{
				if ((this._EvaluacionAbierta1 != value))
				{
					this.OnEvaluacionAbierta1Changing(value);
					this.SendPropertyChanging();
					this._EvaluacionAbierta1 = value;
					this.SendPropertyChanged("EvaluacionAbierta1");
					this.OnEvaluacionAbierta1Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Evaluacion_EvaluacionAbierta", Storage="_Evaluacion", ThisKey="IdEvaluacion", OtherKey="IdEvaluacion", IsForeignKey=true)]
		public Evaluacion Evaluacion
		{
			get
			{
				return this._Evaluacion.Entity;
			}
			set
			{
				Evaluacion previousValue = this._Evaluacion.Entity;
				if (((previousValue != value) 
							|| (this._Evaluacion.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Evaluacion.Entity = null;
						previousValue.EvaluacionAbiertas.Remove(this);
					}
					this._Evaluacion.Entity = value;
					if ((value != null))
					{
						value.EvaluacionAbiertas.Add(this);
						this._IdEvaluacion = value.IdEvaluacion;
					}
					else
					{
						this._IdEvaluacion = default(int);
					}
					this.SendPropertyChanged("Evaluacion");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="TipoEvaluacionAbierta_EvaluacionAbierta", Storage="_TipoEvaluacionAbierta", ThisKey="IdTipoEvaluacionAbierta", OtherKey="IdTipoEvaluacionAbierta", IsForeignKey=true)]
		public TipoEvaluacionAbierta TipoEvaluacionAbierta
		{
			get
			{
				return this._TipoEvaluacionAbierta.Entity;
			}
			set
			{
				TipoEvaluacionAbierta previousValue = this._TipoEvaluacionAbierta.Entity;
				if (((previousValue != value) 
							|| (this._TipoEvaluacionAbierta.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._TipoEvaluacionAbierta.Entity = null;
						previousValue.EvaluacionAbiertas.Remove(this);
					}
					this._TipoEvaluacionAbierta.Entity = value;
					if ((value != null))
					{
						value.EvaluacionAbiertas.Add(this);
						this._IdTipoEvaluacionAbierta = value.IdTipoEvaluacionAbierta;
					}
					else
					{
						this._IdTipoEvaluacionAbierta = default(int);
					}
					this.SendPropertyChanged("TipoEvaluacionAbierta");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.EvaluacionCompetencia")]
	public partial class EvaluacionCompetencia : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _IdEvaluacionCompetencia;
		
		private int _IdEvaluacion;
		
		private int _IdCompetencia;
		
		private int _ValorObtenido;
		
		private string _Observacion;
		
		private EntityRef<Competencia> _Competencia;
		
		private EntityRef<Evaluacion> _Evaluacion;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdEvaluacionCompetenciaChanging(int value);
    partial void OnIdEvaluacionCompetenciaChanged();
    partial void OnIdEvaluacionChanging(int value);
    partial void OnIdEvaluacionChanged();
    partial void OnIdCompetenciaChanging(int value);
    partial void OnIdCompetenciaChanged();
    partial void OnValorObtenidoChanging(int value);
    partial void OnValorObtenidoChanged();
    partial void OnObservacionChanging(string value);
    partial void OnObservacionChanged();
    #endregion
		
		public EvaluacionCompetencia()
		{
			this._Competencia = default(EntityRef<Competencia>);
			this._Evaluacion = default(EntityRef<Evaluacion>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IdEvaluacionCompetencia", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int IdEvaluacionCompetencia
		{
			get
			{
				return this._IdEvaluacionCompetencia;
			}
			set
			{
				if ((this._IdEvaluacionCompetencia != value))
				{
					this.OnIdEvaluacionCompetenciaChanging(value);
					this.SendPropertyChanging();
					this._IdEvaluacionCompetencia = value;
					this.SendPropertyChanged("IdEvaluacionCompetencia");
					this.OnIdEvaluacionCompetenciaChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IdEvaluacion", DbType="Int NOT NULL")]
		public int IdEvaluacion
		{
			get
			{
				return this._IdEvaluacion;
			}
			set
			{
				if ((this._IdEvaluacion != value))
				{
					if (this._Evaluacion.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnIdEvaluacionChanging(value);
					this.SendPropertyChanging();
					this._IdEvaluacion = value;
					this.SendPropertyChanged("IdEvaluacion");
					this.OnIdEvaluacionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IdCompetencia", DbType="Int NOT NULL")]
		public int IdCompetencia
		{
			get
			{
				return this._IdCompetencia;
			}
			set
			{
				if ((this._IdCompetencia != value))
				{
					if (this._Competencia.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnIdCompetenciaChanging(value);
					this.SendPropertyChanging();
					this._IdCompetencia = value;
					this.SendPropertyChanged("IdCompetencia");
					this.OnIdCompetenciaChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ValorObtenido", DbType="Int NOT NULL")]
		public int ValorObtenido
		{
			get
			{
				return this._ValorObtenido;
			}
			set
			{
				if ((this._ValorObtenido != value))
				{
					this.OnValorObtenidoChanging(value);
					this.SendPropertyChanging();
					this._ValorObtenido = value;
					this.SendPropertyChanged("ValorObtenido");
					this.OnValorObtenidoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Observacion", DbType="NVarChar(1023) NOT NULL", CanBeNull=false)]
		public string Observacion
		{
			get
			{
				return this._Observacion;
			}
			set
			{
				if ((this._Observacion != value))
				{
					this.OnObservacionChanging(value);
					this.SendPropertyChanging();
					this._Observacion = value;
					this.SendPropertyChanged("Observacion");
					this.OnObservacionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Competencia_EvaluacionCompetencia", Storage="_Competencia", ThisKey="IdCompetencia", OtherKey="IdCompetencia", IsForeignKey=true)]
		public Competencia Competencia
		{
			get
			{
				return this._Competencia.Entity;
			}
			set
			{
				Competencia previousValue = this._Competencia.Entity;
				if (((previousValue != value) 
							|| (this._Competencia.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Competencia.Entity = null;
						previousValue.EvaluacionCompetencias.Remove(this);
					}
					this._Competencia.Entity = value;
					if ((value != null))
					{
						value.EvaluacionCompetencias.Add(this);
						this._IdCompetencia = value.IdCompetencia;
					}
					else
					{
						this._IdCompetencia = default(int);
					}
					this.SendPropertyChanged("Competencia");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Evaluacion_EvaluacionCompetencia", Storage="_Evaluacion", ThisKey="IdEvaluacion", OtherKey="IdEvaluacion", IsForeignKey=true)]
		public Evaluacion Evaluacion
		{
			get
			{
				return this._Evaluacion.Entity;
			}
			set
			{
				Evaluacion previousValue = this._Evaluacion.Entity;
				if (((previousValue != value) 
							|| (this._Evaluacion.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Evaluacion.Entity = null;
						previousValue.EvaluacionCompetencias.Remove(this);
					}
					this._Evaluacion.Entity = value;
					if ((value != null))
					{
						value.EvaluacionCompetencias.Add(this);
						this._IdEvaluacion = value.IdEvaluacion;
					}
					else
					{
						this._IdEvaluacion = default(int);
					}
					this.SendPropertyChanged("Evaluacion");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Permiso")]
	public partial class Permiso : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _IdPermiso;
		
		private string _Permiso1;
		
		private EntitySet<TipoUsuarioPermiso> _TipoUsuarioPermisos;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdPermisoChanging(int value);
    partial void OnIdPermisoChanged();
    partial void OnPermiso1Changing(string value);
    partial void OnPermiso1Changed();
    #endregion
		
		public Permiso()
		{
			this._TipoUsuarioPermisos = new EntitySet<TipoUsuarioPermiso>(new Action<TipoUsuarioPermiso>(this.attach_TipoUsuarioPermisos), new Action<TipoUsuarioPermiso>(this.detach_TipoUsuarioPermisos));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IdPermiso", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int IdPermiso
		{
			get
			{
				return this._IdPermiso;
			}
			set
			{
				if ((this._IdPermiso != value))
				{
					this.OnIdPermisoChanging(value);
					this.SendPropertyChanging();
					this._IdPermiso = value;
					this.SendPropertyChanged("IdPermiso");
					this.OnIdPermisoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="Permiso", Storage="_Permiso1", DbType="NVarChar(255) NOT NULL", CanBeNull=false)]
		public string Permiso1
		{
			get
			{
				return this._Permiso1;
			}
			set
			{
				if ((this._Permiso1 != value))
				{
					this.OnPermiso1Changing(value);
					this.SendPropertyChanging();
					this._Permiso1 = value;
					this.SendPropertyChanged("Permiso1");
					this.OnPermiso1Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Permiso_TipoUsuarioPermiso", Storage="_TipoUsuarioPermisos", ThisKey="IdPermiso", OtherKey="IdPermiso")]
		public EntitySet<TipoUsuarioPermiso> TipoUsuarioPermisos
		{
			get
			{
				return this._TipoUsuarioPermisos;
			}
			set
			{
				this._TipoUsuarioPermisos.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_TipoUsuarioPermisos(TipoUsuarioPermiso entity)
		{
			this.SendPropertyChanging();
			entity.Permiso = this;
		}
		
		private void detach_TipoUsuarioPermisos(TipoUsuarioPermiso entity)
		{
			this.SendPropertyChanging();
			entity.Permiso = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.TipoDiagnostico")]
	public partial class TipoDiagnostico : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _IdTipoDiagnostico;
		
		private string _TipoDiagnostico1;
		
		private double _PorcentajeHasta;
		
		private EntitySet<Evaluacion> _Evaluacions;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdTipoDiagnosticoChanging(int value);
    partial void OnIdTipoDiagnosticoChanged();
    partial void OnTipoDiagnostico1Changing(string value);
    partial void OnTipoDiagnostico1Changed();
    partial void OnPorcentajeHastaChanging(double value);
    partial void OnPorcentajeHastaChanged();
    #endregion
		
		public TipoDiagnostico()
		{
			this._Evaluacions = new EntitySet<Evaluacion>(new Action<Evaluacion>(this.attach_Evaluacions), new Action<Evaluacion>(this.detach_Evaluacions));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IdTipoDiagnostico", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int IdTipoDiagnostico
		{
			get
			{
				return this._IdTipoDiagnostico;
			}
			set
			{
				if ((this._IdTipoDiagnostico != value))
				{
					this.OnIdTipoDiagnosticoChanging(value);
					this.SendPropertyChanging();
					this._IdTipoDiagnostico = value;
					this.SendPropertyChanged("IdTipoDiagnostico");
					this.OnIdTipoDiagnosticoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="TipoDiagnostico", Storage="_TipoDiagnostico1", DbType="NVarChar(255) NOT NULL", CanBeNull=false)]
		public string TipoDiagnostico1
		{
			get
			{
				return this._TipoDiagnostico1;
			}
			set
			{
				if ((this._TipoDiagnostico1 != value))
				{
					this.OnTipoDiagnostico1Changing(value);
					this.SendPropertyChanging();
					this._TipoDiagnostico1 = value;
					this.SendPropertyChanged("TipoDiagnostico1");
					this.OnTipoDiagnostico1Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PorcentajeHasta", DbType="Float NOT NULL")]
		public double PorcentajeHasta
		{
			get
			{
				return this._PorcentajeHasta;
			}
			set
			{
				if ((this._PorcentajeHasta != value))
				{
					this.OnPorcentajeHastaChanging(value);
					this.SendPropertyChanging();
					this._PorcentajeHasta = value;
					this.SendPropertyChanged("PorcentajeHasta");
					this.OnPorcentajeHastaChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="TipoDiagnostico_Evaluacion", Storage="_Evaluacions", ThisKey="IdTipoDiagnostico", OtherKey="IdTipoDiagnostico")]
		public EntitySet<Evaluacion> Evaluacions
		{
			get
			{
				return this._Evaluacions;
			}
			set
			{
				this._Evaluacions.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Evaluacions(Evaluacion entity)
		{
			this.SendPropertyChanging();
			entity.TipoDiagnostico = this;
		}
		
		private void detach_Evaluacions(Evaluacion entity)
		{
			this.SendPropertyChanging();
			entity.TipoDiagnostico = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.TipoEvaluacion")]
	public partial class TipoEvaluacion : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _IdTipoEvaluacion;
		
		private string _TipoEvaluacion1;
		
		private string _Descripcion;
		
		private EntitySet<Evaluacion> _Evaluacions;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdTipoEvaluacionChanging(int value);
    partial void OnIdTipoEvaluacionChanged();
    partial void OnTipoEvaluacion1Changing(string value);
    partial void OnTipoEvaluacion1Changed();
    partial void OnDescripcionChanging(string value);
    partial void OnDescripcionChanged();
    #endregion
		
		public TipoEvaluacion()
		{
			this._Evaluacions = new EntitySet<Evaluacion>(new Action<Evaluacion>(this.attach_Evaluacions), new Action<Evaluacion>(this.detach_Evaluacions));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IdTipoEvaluacion", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int IdTipoEvaluacion
		{
			get
			{
				return this._IdTipoEvaluacion;
			}
			set
			{
				if ((this._IdTipoEvaluacion != value))
				{
					this.OnIdTipoEvaluacionChanging(value);
					this.SendPropertyChanging();
					this._IdTipoEvaluacion = value;
					this.SendPropertyChanged("IdTipoEvaluacion");
					this.OnIdTipoEvaluacionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="TipoEvaluacion", Storage="_TipoEvaluacion1", DbType="NVarChar(255) NOT NULL", CanBeNull=false)]
		public string TipoEvaluacion1
		{
			get
			{
				return this._TipoEvaluacion1;
			}
			set
			{
				if ((this._TipoEvaluacion1 != value))
				{
					this.OnTipoEvaluacion1Changing(value);
					this.SendPropertyChanging();
					this._TipoEvaluacion1 = value;
					this.SendPropertyChanged("TipoEvaluacion1");
					this.OnTipoEvaluacion1Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Descripcion", DbType="NVarChar(MAX)")]
		public string Descripcion
		{
			get
			{
				return this._Descripcion;
			}
			set
			{
				if ((this._Descripcion != value))
				{
					this.OnDescripcionChanging(value);
					this.SendPropertyChanging();
					this._Descripcion = value;
					this.SendPropertyChanged("Descripcion");
					this.OnDescripcionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="TipoEvaluacion_Evaluacion", Storage="_Evaluacions", ThisKey="IdTipoEvaluacion", OtherKey="IdTipoEvaluacion")]
		public EntitySet<Evaluacion> Evaluacions
		{
			get
			{
				return this._Evaluacions;
			}
			set
			{
				this._Evaluacions.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Evaluacions(Evaluacion entity)
		{
			this.SendPropertyChanging();
			entity.TipoEvaluacion = this;
		}
		
		private void detach_Evaluacions(Evaluacion entity)
		{
			this.SendPropertyChanging();
			entity.TipoEvaluacion = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.TipoEvaluacionAbierta")]
	public partial class TipoEvaluacionAbierta : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _IdTipoEvaluacionAbierta;
		
		private string _TipoEvaluacionAbierta1;
		
		private EntitySet<EvaluacionAbierta> _EvaluacionAbiertas;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdTipoEvaluacionAbiertaChanging(int value);
    partial void OnIdTipoEvaluacionAbiertaChanged();
    partial void OnTipoEvaluacionAbierta1Changing(string value);
    partial void OnTipoEvaluacionAbierta1Changed();
    #endregion
		
		public TipoEvaluacionAbierta()
		{
			this._EvaluacionAbiertas = new EntitySet<EvaluacionAbierta>(new Action<EvaluacionAbierta>(this.attach_EvaluacionAbiertas), new Action<EvaluacionAbierta>(this.detach_EvaluacionAbiertas));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IdTipoEvaluacionAbierta", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int IdTipoEvaluacionAbierta
		{
			get
			{
				return this._IdTipoEvaluacionAbierta;
			}
			set
			{
				if ((this._IdTipoEvaluacionAbierta != value))
				{
					this.OnIdTipoEvaluacionAbiertaChanging(value);
					this.SendPropertyChanging();
					this._IdTipoEvaluacionAbierta = value;
					this.SendPropertyChanged("IdTipoEvaluacionAbierta");
					this.OnIdTipoEvaluacionAbiertaChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="TipoEvaluacionAbierta", Storage="_TipoEvaluacionAbierta1", DbType="NVarChar(255) NOT NULL", CanBeNull=false)]
		public string TipoEvaluacionAbierta1
		{
			get
			{
				return this._TipoEvaluacionAbierta1;
			}
			set
			{
				if ((this._TipoEvaluacionAbierta1 != value))
				{
					this.OnTipoEvaluacionAbierta1Changing(value);
					this.SendPropertyChanging();
					this._TipoEvaluacionAbierta1 = value;
					this.SendPropertyChanged("TipoEvaluacionAbierta1");
					this.OnTipoEvaluacionAbierta1Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="TipoEvaluacionAbierta_EvaluacionAbierta", Storage="_EvaluacionAbiertas", ThisKey="IdTipoEvaluacionAbierta", OtherKey="IdTipoEvaluacionAbierta")]
		public EntitySet<EvaluacionAbierta> EvaluacionAbiertas
		{
			get
			{
				return this._EvaluacionAbiertas;
			}
			set
			{
				this._EvaluacionAbiertas.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_EvaluacionAbiertas(EvaluacionAbierta entity)
		{
			this.SendPropertyChanging();
			entity.TipoEvaluacionAbierta = this;
		}
		
		private void detach_EvaluacionAbiertas(EvaluacionAbierta entity)
		{
			this.SendPropertyChanging();
			entity.TipoEvaluacionAbierta = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.TipoUsuario")]
	public partial class TipoUsuario : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _IdTipoUsuario;
		
		private string _TipoUsuario1;
		
		private EntitySet<Usuario> _Usuarios;
		
		private EntitySet<TipoUsuarioPermiso> _TipoUsuarioPermisos;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdTipoUsuarioChanging(int value);
    partial void OnIdTipoUsuarioChanged();
    partial void OnTipoUsuario1Changing(string value);
    partial void OnTipoUsuario1Changed();
    #endregion
		
		public TipoUsuario()
		{
			this._Usuarios = new EntitySet<Usuario>(new Action<Usuario>(this.attach_Usuarios), new Action<Usuario>(this.detach_Usuarios));
			this._TipoUsuarioPermisos = new EntitySet<TipoUsuarioPermiso>(new Action<TipoUsuarioPermiso>(this.attach_TipoUsuarioPermisos), new Action<TipoUsuarioPermiso>(this.detach_TipoUsuarioPermisos));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IdTipoUsuario", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int IdTipoUsuario
		{
			get
			{
				return this._IdTipoUsuario;
			}
			set
			{
				if ((this._IdTipoUsuario != value))
				{
					this.OnIdTipoUsuarioChanging(value);
					this.SendPropertyChanging();
					this._IdTipoUsuario = value;
					this.SendPropertyChanged("IdTipoUsuario");
					this.OnIdTipoUsuarioChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="TipoUsuario", Storage="_TipoUsuario1", DbType="NVarChar(255) NOT NULL", CanBeNull=false)]
		public string TipoUsuario1
		{
			get
			{
				return this._TipoUsuario1;
			}
			set
			{
				if ((this._TipoUsuario1 != value))
				{
					this.OnTipoUsuario1Changing(value);
					this.SendPropertyChanging();
					this._TipoUsuario1 = value;
					this.SendPropertyChanged("TipoUsuario1");
					this.OnTipoUsuario1Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="TipoUsuario_Usuario", Storage="_Usuarios", ThisKey="IdTipoUsuario", OtherKey="IdTipoUsuario")]
		public EntitySet<Usuario> Usuarios
		{
			get
			{
				return this._Usuarios;
			}
			set
			{
				this._Usuarios.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="TipoUsuario_TipoUsuarioPermiso", Storage="_TipoUsuarioPermisos", ThisKey="IdTipoUsuario", OtherKey="IdTipoUsuario")]
		public EntitySet<TipoUsuarioPermiso> TipoUsuarioPermisos
		{
			get
			{
				return this._TipoUsuarioPermisos;
			}
			set
			{
				this._TipoUsuarioPermisos.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Usuarios(Usuario entity)
		{
			this.SendPropertyChanging();
			entity.TipoUsuario = this;
		}
		
		private void detach_Usuarios(Usuario entity)
		{
			this.SendPropertyChanging();
			entity.TipoUsuario = null;
		}
		
		private void attach_TipoUsuarioPermisos(TipoUsuarioPermiso entity)
		{
			this.SendPropertyChanging();
			entity.TipoUsuario = this;
		}
		
		private void detach_TipoUsuarioPermisos(TipoUsuarioPermiso entity)
		{
			this.SendPropertyChanging();
			entity.TipoUsuario = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.TipoUsuarioPermiso")]
	public partial class TipoUsuarioPermiso : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _IdTipoUsuarioPermiso;
		
		private int _IdTipoUsuario;
		
		private int _IdPermiso;
		
		private EntityRef<Permiso> _Permiso;
		
		private EntityRef<TipoUsuario> _TipoUsuario;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdTipoUsuarioPermisoChanging(int value);
    partial void OnIdTipoUsuarioPermisoChanged();
    partial void OnIdTipoUsuarioChanging(int value);
    partial void OnIdTipoUsuarioChanged();
    partial void OnIdPermisoChanging(int value);
    partial void OnIdPermisoChanged();
    #endregion
		
		public TipoUsuarioPermiso()
		{
			this._Permiso = default(EntityRef<Permiso>);
			this._TipoUsuario = default(EntityRef<TipoUsuario>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IdTipoUsuarioPermiso", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int IdTipoUsuarioPermiso
		{
			get
			{
				return this._IdTipoUsuarioPermiso;
			}
			set
			{
				if ((this._IdTipoUsuarioPermiso != value))
				{
					this.OnIdTipoUsuarioPermisoChanging(value);
					this.SendPropertyChanging();
					this._IdTipoUsuarioPermiso = value;
					this.SendPropertyChanged("IdTipoUsuarioPermiso");
					this.OnIdTipoUsuarioPermisoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IdTipoUsuario", DbType="Int NOT NULL")]
		public int IdTipoUsuario
		{
			get
			{
				return this._IdTipoUsuario;
			}
			set
			{
				if ((this._IdTipoUsuario != value))
				{
					if (this._TipoUsuario.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnIdTipoUsuarioChanging(value);
					this.SendPropertyChanging();
					this._IdTipoUsuario = value;
					this.SendPropertyChanged("IdTipoUsuario");
					this.OnIdTipoUsuarioChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IdPermiso", DbType="Int NOT NULL")]
		public int IdPermiso
		{
			get
			{
				return this._IdPermiso;
			}
			set
			{
				if ((this._IdPermiso != value))
				{
					if (this._Permiso.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnIdPermisoChanging(value);
					this.SendPropertyChanging();
					this._IdPermiso = value;
					this.SendPropertyChanged("IdPermiso");
					this.OnIdPermisoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Permiso_TipoUsuarioPermiso", Storage="_Permiso", ThisKey="IdPermiso", OtherKey="IdPermiso", IsForeignKey=true)]
		public Permiso Permiso
		{
			get
			{
				return this._Permiso.Entity;
			}
			set
			{
				Permiso previousValue = this._Permiso.Entity;
				if (((previousValue != value) 
							|| (this._Permiso.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Permiso.Entity = null;
						previousValue.TipoUsuarioPermisos.Remove(this);
					}
					this._Permiso.Entity = value;
					if ((value != null))
					{
						value.TipoUsuarioPermisos.Add(this);
						this._IdPermiso = value.IdPermiso;
					}
					else
					{
						this._IdPermiso = default(int);
					}
					this.SendPropertyChanged("Permiso");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="TipoUsuario_TipoUsuarioPermiso", Storage="_TipoUsuario", ThisKey="IdTipoUsuario", OtherKey="IdTipoUsuario", IsForeignKey=true)]
		public TipoUsuario TipoUsuario
		{
			get
			{
				return this._TipoUsuario.Entity;
			}
			set
			{
				TipoUsuario previousValue = this._TipoUsuario.Entity;
				if (((previousValue != value) 
							|| (this._TipoUsuario.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._TipoUsuario.Entity = null;
						previousValue.TipoUsuarioPermisos.Remove(this);
					}
					this._TipoUsuario.Entity = value;
					if ((value != null))
					{
						value.TipoUsuarioPermisos.Add(this);
						this._IdTipoUsuario = value.IdTipoUsuario;
					}
					else
					{
						this._IdTipoUsuario = default(int);
					}
					this.SendPropertyChanged("TipoUsuario");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Evaluado")]
	public partial class Evaluado : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _IdEvaluado;
		
		private int _Rut;
		
		private string _Nombre;
		
		private string _ApellidoPaterno;
		
		private string _ApellidoMaterno;
		
		private string _Profesion;
		
		private int _Celular;
		
		private System.DateTime _FechaNacimiento;
		
		private string _Correo;
		
		private string _CreadoPor;
		
		private System.DateTime _FechaCreacion;
		
		private EntitySet<Evaluacion> _Evaluacions;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdEvaluadoChanging(int value);
    partial void OnIdEvaluadoChanged();
    partial void OnRutChanging(int value);
    partial void OnRutChanged();
    partial void OnNombreChanging(string value);
    partial void OnNombreChanged();
    partial void OnApellidoPaternoChanging(string value);
    partial void OnApellidoPaternoChanged();
    partial void OnApellidoMaternoChanging(string value);
    partial void OnApellidoMaternoChanged();
    partial void OnProfesionChanging(string value);
    partial void OnProfesionChanged();
    partial void OnCelularChanging(int value);
    partial void OnCelularChanged();
    partial void OnFechaNacimientoChanging(System.DateTime value);
    partial void OnFechaNacimientoChanged();
    partial void OnCorreoChanging(string value);
    partial void OnCorreoChanged();
    partial void OnCreadoPorChanging(string value);
    partial void OnCreadoPorChanged();
    partial void OnFechaCreacionChanging(System.DateTime value);
    partial void OnFechaCreacionChanged();
    #endregion
		
		public Evaluado()
		{
			this._Evaluacions = new EntitySet<Evaluacion>(new Action<Evaluacion>(this.attach_Evaluacions), new Action<Evaluacion>(this.detach_Evaluacions));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IdEvaluado", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int IdEvaluado
		{
			get
			{
				return this._IdEvaluado;
			}
			set
			{
				if ((this._IdEvaluado != value))
				{
					this.OnIdEvaluadoChanging(value);
					this.SendPropertyChanging();
					this._IdEvaluado = value;
					this.SendPropertyChanged("IdEvaluado");
					this.OnIdEvaluadoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Rut", DbType="Int NOT NULL")]
		public int Rut
		{
			get
			{
				return this._Rut;
			}
			set
			{
				if ((this._Rut != value))
				{
					this.OnRutChanging(value);
					this.SendPropertyChanging();
					this._Rut = value;
					this.SendPropertyChanged("Rut");
					this.OnRutChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Nombre", DbType="NVarChar(255) NOT NULL", CanBeNull=false)]
		public string Nombre
		{
			get
			{
				return this._Nombre;
			}
			set
			{
				if ((this._Nombre != value))
				{
					this.OnNombreChanging(value);
					this.SendPropertyChanging();
					this._Nombre = value;
					this.SendPropertyChanged("Nombre");
					this.OnNombreChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ApellidoPaterno", DbType="NVarChar(255) NOT NULL", CanBeNull=false)]
		public string ApellidoPaterno
		{
			get
			{
				return this._ApellidoPaterno;
			}
			set
			{
				if ((this._ApellidoPaterno != value))
				{
					this.OnApellidoPaternoChanging(value);
					this.SendPropertyChanging();
					this._ApellidoPaterno = value;
					this.SendPropertyChanged("ApellidoPaterno");
					this.OnApellidoPaternoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ApellidoMaterno", DbType="NVarChar(255)")]
		public string ApellidoMaterno
		{
			get
			{
				return this._ApellidoMaterno;
			}
			set
			{
				if ((this._ApellidoMaterno != value))
				{
					this.OnApellidoMaternoChanging(value);
					this.SendPropertyChanging();
					this._ApellidoMaterno = value;
					this.SendPropertyChanged("ApellidoMaterno");
					this.OnApellidoMaternoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Profesion", DbType="NVarChar(255) NOT NULL", CanBeNull=false)]
		public string Profesion
		{
			get
			{
				return this._Profesion;
			}
			set
			{
				if ((this._Profesion != value))
				{
					this.OnProfesionChanging(value);
					this.SendPropertyChanging();
					this._Profesion = value;
					this.SendPropertyChanged("Profesion");
					this.OnProfesionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Celular", DbType="Int NOT NULL")]
		public int Celular
		{
			get
			{
				return this._Celular;
			}
			set
			{
				if ((this._Celular != value))
				{
					this.OnCelularChanging(value);
					this.SendPropertyChanging();
					this._Celular = value;
					this.SendPropertyChanged("Celular");
					this.OnCelularChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FechaNacimiento", DbType="Date NOT NULL")]
		public System.DateTime FechaNacimiento
		{
			get
			{
				return this._FechaNacimiento;
			}
			set
			{
				if ((this._FechaNacimiento != value))
				{
					this.OnFechaNacimientoChanging(value);
					this.SendPropertyChanging();
					this._FechaNacimiento = value;
					this.SendPropertyChanged("FechaNacimiento");
					this.OnFechaNacimientoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Correo", DbType="NVarChar(255) NOT NULL", CanBeNull=false)]
		public string Correo
		{
			get
			{
				return this._Correo;
			}
			set
			{
				if ((this._Correo != value))
				{
					this.OnCorreoChanging(value);
					this.SendPropertyChanging();
					this._Correo = value;
					this.SendPropertyChanged("Correo");
					this.OnCorreoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreadoPor", DbType="NVarChar(255) NOT NULL", CanBeNull=false)]
		public string CreadoPor
		{
			get
			{
				return this._CreadoPor;
			}
			set
			{
				if ((this._CreadoPor != value))
				{
					this.OnCreadoPorChanging(value);
					this.SendPropertyChanging();
					this._CreadoPor = value;
					this.SendPropertyChanged("CreadoPor");
					this.OnCreadoPorChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FechaCreacion", DbType="Date NOT NULL")]
		public System.DateTime FechaCreacion
		{
			get
			{
				return this._FechaCreacion;
			}
			set
			{
				if ((this._FechaCreacion != value))
				{
					this.OnFechaCreacionChanging(value);
					this.SendPropertyChanging();
					this._FechaCreacion = value;
					this.SendPropertyChanged("FechaCreacion");
					this.OnFechaCreacionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Evaluado_Evaluacion", Storage="_Evaluacions", ThisKey="IdEvaluado", OtherKey="IdEvaluado")]
		public EntitySet<Evaluacion> Evaluacions
		{
			get
			{
				return this._Evaluacions;
			}
			set
			{
				this._Evaluacions.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Evaluacions(Evaluacion entity)
		{
			this.SendPropertyChanging();
			entity.Evaluado = this;
		}
		
		private void detach_Evaluacions(Evaluacion entity)
		{
			this.SendPropertyChanging();
			entity.Evaluado = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.vw_RelacionEmpresaCargo")]
	public partial class vw_RelacionEmpresaCargo
	{
		
		private string _Empresa;
		
		private int _IdCargo;
		
		private string _Cargo;
		
		public vw_RelacionEmpresaCargo()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Empresa", DbType="NVarChar(255) NOT NULL", CanBeNull=false)]
		public string Empresa
		{
			get
			{
				return this._Empresa;
			}
			set
			{
				if ((this._Empresa != value))
				{
					this._Empresa = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IdCargo", DbType="Int NOT NULL")]
		public int IdCargo
		{
			get
			{
				return this._IdCargo;
			}
			set
			{
				if ((this._IdCargo != value))
				{
					this._IdCargo = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Cargo", DbType="NVarChar(255) NOT NULL", CanBeNull=false)]
		public string Cargo
		{
			get
			{
				return this._Cargo;
			}
			set
			{
				if ((this._Cargo != value))
				{
					this._Cargo = value;
				}
			}
		}
	}
}
#pragma warning restore 1591
