@model Althus.Evaluaciones.Web.Models.EvaluacionModels.ListadoEvaluacionesViewModel

@{
    ViewBag.Title = "ListadoEvaluaciones";
    Layout = "~/Views/Shared/_Layout.cshtml";
}
@*<div class="row">
    <div class="col-md-12">
        @using (Html.BeginForm())
        {
            <div class="panel panel-default">
                <div class="panel-heading">
                    <h4>Nuevo Postulante</h4>
                </div>
                <div class="panel-body">
                    @Html.ValidationSummary()
                    <div class="row">
                        <div class="col-md-2">
                            @Html.LabelFor(x => x.FORM.IdEmpresa, new { @class = "form-label" })
                        </div>
                        <div class="col-md-4">
                            @Html.DropDownListFor(x => x.FORM.IdEmpresa, Model.Empresas, "Elija una opción", new { @class = "form-control" })
                            @Html.ValidationMessageFor(x => x.FORM.IdEmpresa)
                        </div>


                        <div class="col-md-2">
                            @Html.LabelFor(x => x.FORM.IdCargo, new { @class = "form-label" })
                        </div>
                        <div class="col-md-4">
                            <select name="Form.IdCargo" id="Form_IdCargo" class="form-control">
                                @foreach (var item in Model.Cargos.GroupBy(x => x.OptGroup).OrderBy(x => x.Key))
                                {
                                    <optgroup label="@item.Key">
                                        @foreach (var subitem in item)
                                        {
                                            <option value="@subitem.Value" @(subitem.Selected ? "selected=\"selected\"" : "Elija una opción")>@subitem.Text</option>
                                        }
                                    </optgroup>
                                }
                            </select>
                            @Html.ValidationMessageFor(x => x.FORM.IdCargo)
                        </div>
                    </div>
                    <div class="row">
                        <div class="col-md-12">
                            <input class="btn-default btn" type="submit" value="Buscar" />
                        </div>
                    </div>
                </div>
            </div>
        }
    </div>
</div>*@
<nav class="navbar navbar-default" role="navigation">
    <div class="container-fluid">
        <!-- Brand and toggle get grouped for better mobile display -->
        <div class="navbar-header">
            <button type="button" class="navbar-toggle" data-toggle="collapse" data-target="#bs-example-navbar-collapse-1">
                <span class="sr-only">Toggle navigation</span>
                <span class="icon-bar"></span>
                <span class="icon-bar"></span>
                <span class="icon-bar"></span>
            </button>
            <a class="navbar-brand" href="#">Evaluaciones Realizadas</a>
        </div>
        <!-- Collect the nav links, forms, and other content for toggling -->
        <div class="collapse navbar-collapse" id="bs-example-navbar-collapse-1">
            <ul class="nav navbar-nav"></ul>
            <form class="navbar-form navbar-left" role="search">
                <div class="form-group">
                    <input type="text" class="form-control" placeholder="Búsqueda amplia" name="filtro" id="input-filtro" value="@Model.filtro">
                </div>
                <button type="submit" class="btn btn-default">Buscar</button>
            </form>
            @Html.ActionLink("Agregar", "CrearEvaluado", "Evaluado", null, new { @class = "btn btn-primary navbar-btn navbar-right" })
        </div>
    </div>
</nav>

<div class="row">
    <div class="col-md-12">
        @Html.PagedListPager(Model.Evaluaciones, x => Url.Action("ListadoEvaluaciones", new
   {
       pagina = x,
       filtro = Model.filtro
   }))

    </div>
</div>
<div class="row">
    <div class="col-md-12">

        @Html.Grid(Model.Evaluaciones).Columns(col =>
   {
       col.For(x=> Html.ButtonIconActionLink("search","Detalle","DetalleEvaluacion","Evaluacion",null,new{ IdEvaluacion = x.IdEvaluacion}));
       col.For(x => Html.ButtonIconActionLink("save-file", "Detalle", "ExportarEvaluacionPdf", "Evaluacion", null, new { IdEvaluacion = x.IdEvaluacion }));
       col.For(x => x.Evaluado.NombreCompleto).Named("Nombre");
       col.For(x => x.Evaluado.Correo);
       col.For(x => x.FechaEvaluacion.ToShortDateString()).Named("Fecha");
       col.For(x => x.Cargo.Cargo1).Named("Cargo");
       col.For(x => x.Cargo.Empresa.Empresa1).Named("Empresa");
       col.For(x => x.TipoEvaluacion.TipoEvaluacion1).Named("Tipo");

   }).Attributes(@class => "table");
    </div>
</div>



